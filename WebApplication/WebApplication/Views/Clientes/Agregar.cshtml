@using WebApplication.Models;
@model ClientesCLS

@{
    ViewBag.Title = "Agregar";
    List<SelectListItem> listaSexo = (List<SelectListItem>)ViewBag.lista;
}

<h2>Agregar Clientes</h2>

@using (Html.BeginForm("Agregar", "Clientes", FormMethod.Post, new { @id = "frmAgregarCliente"}))
{
    <div class="row">
        <div class="col-6">
            <div class="mb-2">
                @Html.LabelFor(p => p.nombre)
                @Html.TextBoxFor(p => p.nombre, new { @class = "form-control" })
                @Html.ValidationMessage("nombre", new { @class = "text-danger" })
            </div>

            <div class="mb-2">
                @Html.LabelFor(p => p.appaterno)
                @Html.TextBoxFor(p => p.appaterno, new { @class = "form-control" })
                @Html.ValidationMessage("appaterno", new { @class = "text-danger" })
            </div>

            <div class="mb-2">
                @Html.LabelFor(p => p.direccion)
                @Html.EditorFor(p => p.direccion, new { htmlAttributes = new { @class = "form-control", @rows = "1" } }) <!--Si va acompañado de la etiqueta datatype en el CLS esto crea un textarea-->
                @Html.ValidationMessage("direccion", new { @class = "text-danger" })
            </div>

            <div class="mb-2">
                @Html.LabelFor(p => p.telefonofijo)
                @Html.TextBoxFor(p => p.telefonofijo, new { @class = "form-control" })
                @Html.ValidationMessage("telefonofijo", new { @class = "text-danger" })
            </div>

        </div>

        <div class="col-6">

            <div class="mb-2">
                @Html.LabelFor(p => p.iidsexo)
                @Html.DropDownList("iidsexo", listaSexo, null, new { @class = "form-control" })
                @Html.ValidationMessage("iidsexo", new { @class = "text-danger" })
            </div>


            <div class="mb-2">
                @Html.LabelFor(p => p.apmaterno)
                @Html.TextBoxFor(p => p.apmaterno, new { @class = "form-control" })
                @Html.ValidationMessage("apmaterno", new { @class = "text-danger" })
            </div>

            <div class="mb-2">
                @Html.LabelFor(p => p.email)
                @Html.TextBoxFor(p => p.email, new { @class = "form-control" })
                @Html.ValidationMessage("email", new { @class = "text-danger" })
            </div>


            <div class="mb-2">
                @Html.LabelFor(p => p.telefonocelular)
                @Html.TextBoxFor(p => p.telefonocelular, new { @class = "form-control" })
                @Html.ValidationMessage("telefonocelular", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-12 d-flex justify-content-between mt-3">
            @Html.ActionLink("Atrás", "Index", "Clientes", null, new { @class = "btn btn-info w-25", @style = "color:white;" })
            <button type="button" class="btn btn-primary w-25" data-bs-toggle="modal" data-bs-target="#confirmationAddClient">Guardar</button>
        </div>
    </div>
}


<!-- Modal -->
<div class="modal fade" id="confirmationAddClient" tabindex="-1" role="dialog" aria-labelledby="confirmationAddClientTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationAddClientTitle">¿Desea guardar los cambios?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success w-25" onclick="agregarCliente()">Aceptar</button>
                <button type="button" class="btn btn-danger w-25" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<script>

    function agregarCliente() {

        const frmAgregarCliente = document.getElementById("frmAgregarCliente");

        frmAgregarCliente.submit();

    }

</script>

